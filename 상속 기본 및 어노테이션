//상속!! 부모의 기능을 자식이 가져다 쓰므로써 코드의 중복을 피할수 있음 
//형식: 자식class이름 extends 부모 class이름
//어노테이션  @overrinding 이런식으로 @이 붙여서 쓰이는데 이는 컴퓨터가 읽을수 있는 주석으로 문제가 있을시 컴파일 오류를 발생시켜 코드를 고치기 쉽게 만듬!
package extends1.overriding;

public class Car {
    public void move() {

        System.out.println("차를 이동합니다.");
    }

    public  void openDoor(){
        System.out.println("문을 엽니다.");
    }
}
---
package extends1.overriding;


public class CarMain {
    public static void main(String[] args) {
        ElectriCar electriCar=new ElectriCar();
        electriCar.move();

        GasCar gasCar=new GasCar();
        gasCar.move();

}
}
----
package extends1.overriding;

public class ElectriCar extends Car {
    @Override //에노테이션!! 컴퓨터가 읽을수 있는 주석임
    public void move() {

        System.out.println("전기차를 빠르게 이동합니다.");
    }
    public void charge(){
        System.out.println("충전합니다.");
    }
}
----
package extends1.overriding;

public class GasCar extends Car {
    public void fillup() {
        System.out.println("기름을 주유합니다");
    }
}


