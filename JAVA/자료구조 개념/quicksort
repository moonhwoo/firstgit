package dataStructure;

public class QuickSort {
    int i=0;
    public int patition(int a[],int begin,int end){
        int pivot,tmp,L,R,t;
        L=begin;
        R=end;
        pivot=(begin+end)/2;
        System.out.printf("\n [퀵정렬 %d 단계 :pivot=%d ]\n",++i,a[pivot]);
        while(L<R){
            while((a[L]<a[pivot]) && (L<R)){
                L++;
            }
            while((a[R]>=a[pivot]) && (L<R)){
                R--;
            }
            if(L<R){
                tmp=a[L];
                a[L]=a[R];
                a[R]=tmp;
            }
        }
        tmp=a[pivot];
        a[pivot]=a[R];
        a[R]=tmp;
        for(t=0;t<a.length;t++){
            System.out.printf("%3d ",a[t]);
            System.out.println();
        }

        return L;
    }

    public void quickSort(int a[],int begin,int end){
        if(begin<end){
            int p;
            p=patition(a,begin,end);
            quickSort(a,begin,p-1);
            quickSort(a,p+1,end);
        }
    }

    public static void main(String[] args) {
        QuickSort qs = new QuickSort();
        int[] a={69,10,30,2,16,8,31,22};
        System.out.print("\n정렬한 원소a :");
        for(int i=0;i<a.length;i++){
            System.out.printf("%d",a[i]);
        }

        qs.quickSort(a,0,7);
    }
    }




