package Array;

import java.util.Scanner;

public class RowDiagonalMaxSum {
    public int solution(int num,int[][]arr){
        int maxsum=0;
        for(int i=0;i<num;i++){
            int sum=0;
            for(int j=0;j<num;j++){
                sum+=arr[i][j];
                if(sum>maxsum){
                    maxsum=sum;
                }
            }
        }// 가로 합중 젤큰값이 들어가 있음
        //이제 세로
        for(int j=0;j<num;j++){
            int sum=0;
            for(int i=0;i<num;i++){
                sum+=arr[i][j];
                if(sum>maxsum){  //이렇게 해도되지만 Math.max(sum1,sum2) 이렇게 해도된다
                    maxsum=sum;
                }
            }  //이렇게 하면 가로 새로 까지 합 최고가 저장되어 있음
            //마지막으로 대각선 구해야함  대각선은 2개만 나옴
       sum=0;
        for(int k=0;k<num;k++){
            sum+=arr[k][k];} //같은 수
            if(sum>maxsum){
                maxsum=sum;
            }
        }
        int sum=0;
        for(int k=0;k<num;k++){
            sum+=arr[k][num-k-1];
            }
        if(sum>maxsum){
            maxsum=sum;
        }


        return maxsum;
    }

    public static class Main {
        public static void main(String[] args) {
            Scanner sc = new Scanner(System.in);
            RowDiagonalMaxSum T=new RowDiagonalMaxSum();
            int number = sc.nextInt();
            int[][] arr = new int[number][number]; //2차원 배열 생성
            for (int i = 0; i < number; i++) {
                for (int j = 0; j < number; j++) {
                arr[i][j] = sc.nextInt();}

            }
            System.out.println(T.solution(number,arr));


        }
    }
}
